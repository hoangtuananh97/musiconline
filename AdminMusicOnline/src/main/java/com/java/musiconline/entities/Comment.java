package com.java.musiconline.entities;
// Generated Jun 25, 2018 7:49:38 AM by Hibernate Tools 4.3.1.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.fasterxml.jackson.annotation.JsonManagedReference;

/**
 * Comment generated by hbm2java
 */
@Entity
@Table(name = "comment", catalog = "musiconline")
public class Comment implements java.io.Serializable {

	private Integer idComment;
	private Feels feels;
	private Songs songs;
	private String nameComment;
	private String context;
	private Date times;
	
	private Set<ReplyComment> replyComments = new HashSet<ReplyComment>(0);

	public Comment() {
	}

	public Comment(Feels feels, Songs songs, String nameComment, String context, Date times) {
		this.feels = feels;
		this.songs = songs;
		this.nameComment = nameComment;
		this.context = context;
		this.times = times;
	}

	public Comment(Feels feels, Songs songs, String nameComment, String context, Date times,
			Set<ReplyComment> replyComments) {
		this.feels = feels;
		this.songs = songs;
		this.nameComment = nameComment;
		this.context = context;
		this.times = times;
		this.replyComments = replyComments;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "idComment", unique = true, nullable = false)
	public Integer getIdComment() {
		return this.idComment;
	}

	public void setIdComment(Integer idComment) {
		this.idComment = idComment;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "idFeels", nullable = false)
	public Feels getFeels() {
		return this.feels;
	}

	public void setFeels(Feels feels) {
		this.feels = feels;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "idSong", nullable = false)
	public Songs getSongs() {
		return this.songs;
	}

	public void setSongs(Songs songs) {
		this.songs = songs;
	}

	@Column(name = "name_comment", nullable = false, length = 200)
	public String getNameComment() {
		return this.nameComment;
	}

	public void setNameComment(String nameComment) {
		this.nameComment = nameComment;
	}

	@Column(name = "context", nullable = false, length = 200)
	public String getContext() {
		return this.context;
	}

	public void setContext(String context) {
		this.context = context;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "times", nullable = false, length = 19)
	public Date getTimes() {
		return this.times;
	}

	public void setTimes(Date times) {
		this.times = times;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "comment")
	public Set<ReplyComment> getReplyComments() {
		return this.replyComments;
	}

	public void setReplyComments(Set<ReplyComment> replyComments) {
		this.replyComments = replyComments;
	}

}
